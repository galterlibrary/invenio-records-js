/*
 * This file is part of Invenio.
 * Copyright (C) 2016 CERN.
 *
 * Invenio is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * Invenio is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Invenio; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
 *
 * In applying this license, CERN does not
 * waive the privileges and immunities granted to it by virtue of its status
 * as an Intergovernmental Organization or submit itself to any jurisdiction.
 */
function invenioRecordsConfiguration(e){e.html5Mode({enabled:!0,requireBase:!1,rewriteLinks:!1})}function InvenioRecordsCtrl(e,n,o,r,i,t,a){function s(e){A.invenioRecordsSchema=e.data}function c(e){A.invenioRecordsForm=e.data}function d(e,r,i,t,d){n.$broadcast("invenio.records.loading.start"),A.invenioRecordsModel=angular.copy(t),A.invenioRecordsArgs=angular.merge({},A.invenioRecordsArgs,r),A.invenioRecordsEndpoints=angular.merge({},i),Object.keys(d).length>0&&n.$broadcast("invenio.records.endpoints.updated",d),o.all([a.get(A.invenioRecordsEndpoints.schema).then(s),a.get(A.invenioRecordsEndpoints.form).then(c)]).then(function(){n.$broadcast("invenio.records.loading.stop")})}function u(){var e=o.defer();return angular.isUndefined(A.invenioRecordsEndpoints.self)?a.request({method:"POST",url:A.invenioRecordsEndpoints.initialization,data:{},headers:A.invenioRecordsArgs.headers||{}}).then(function(o){n.$broadcast("invenio.records.endpoints.updated",o.data.links),e.resolve({})},function(n){e.reject(n)}):e.resolve({}),e.promise}function l(){var e=angular.merge({},{metadata:A.invenioRecordsModel}),n=[[null],[{}],"",[void 0]];return angular.forEach(e.metadata,function(o,r){angular.forEach(n,function(n){angular.equals(n,o)&&delete e.metadata[r]})}),e}function v(e,n){var o=l();return a.request({url:A.invenioRecordsEndpoints[e],method:(n||"PUT").toUpperCase(),data:o,headers:A.invenioRecordsArgs.headers||{}})}function f(e){if(!angular.isUndefined(e)&&""!==e){var n=e;"/"!==e.substr(0,1)&&"http"!==e.substr(0,4)&&(n=A.invenioRecordsEndpoints[e]),r.location.href=n}}function m(r,i){function t(e){var o=e[e.length-1]||{};n.$broadcast("invenio.records.alert",{type:"success",data:o.data,action:s}),angular.isUndefined(o.data.links)||n.$broadcast("invenio.records.endpoints.updated",o.data.links),n.$broadcast("invenio.records.action.success",s),n.$broadcast("invenio.records.loading.stop"),f(i||void 0)}function a(r){if(n.$broadcast("invenio.records.alert",{type:"danger",data:r.data}),400===r.data.status&&r.data.errors){var i=o.defer(),t=i.promise;t.then(function(){angular.forEach(r.data.errors,function(n){try{e.$broadcast("schemaForm.error."+n.field.replace("metadata.",""),"backendValidationError",n.message)}catch(o){e.$broadcast("schemaForm.error."+n.field,"backendValidationError",n.message)}})}).then(function(){n.$broadcast("invenio.records.loading.stop")}),i.resolve()}else n.$broadcast("invenio.records.loading.stop");n.$broadcast("invenio.records.action.error",r.data)}var s="string"==typeof r[0]?[r]:r;n.$broadcast("invenio.records.loading.start"),u().then(function(){var e=[];angular.forEach(s,function(e){this.push(v(e[0],e[1]))},e),o.all(e).then(t,a)},a)}function p(n,o){o.validationMessage&&e.$broadcast("schemaForm.error."+o.key.join("."),"backendValidationError",!0)}function g(){A.invenioRecordsLoading=!0}function R(){A.invenioRecordsLoading=!1}function h(e,n){A.invenioRecordsAlert=null,t(function(){A.invenioRecordsAlert=n},0)}function $(n,o){var r=[];angular.forEach(o,function(e){this.push(e[0])},r),r.indexOf("self")>-1?e.depositionForm.$setPristine():r.indexOf("publish")>-1&&(e.depositionForm.$setPristine(),e.depositionForm.$setSubmitted())}function E(e,o){A.invenioRecordsEndpoints=angular.merge({},A.invenioRecordsEndpoints,o),n.$broadcast("invenio.records.location.updated",o)}function b(e,n){if(!angular.isUndefined(n.html)){var o=document.createElement("a");o.href=n.html,i.url(o.pathname),i.replace()}}var A=this;A.invenioRecordsArgs={url:"/",method:"GET",headers:{"Content-Type":"application/json"}},A.invenioRecordsModel=null,A.invenioRecordsEndpoints=null,A.invenioRecordsLoading=!0,A.invenioRecordsAlert=null,A.actionHandler=m,A.removeValidationMessage=p,e.$on("invenio.records.init",d),n.$on("invenio.records.alert",h),n.$on("invenio.records.loading.start",g),n.$on("invenio.records.loading.stop",R),n.$on("invenio.records.action.success",$),n.$on("invenio.records.endpoints.updated",E),n.$on("invenio.records.location.updated",b)}function invenioRecords(){function e(e,n,o){var r={templateParams:JSON.parse(o.templateParams||"{}")},i=JSON.parse(o.extraParams||"{}"),t=JSON.parse(o.links||"{}"),a=angular.merge({},r,i),s={form:o.form,initialization:o.initialization,schema:o.schema},c=JSON.parse(o.record||"{}");e.$broadcast("invenio.records.init",a,s,c,t)}return{restrict:"AE",scope:!1,controller:"InvenioRecordsCtrl",controllerAs:"recordsVM",link:e}}function invenioRecordsActions(){function e(e,n){return n.template}return{restrict:"AE",scope:!1,require:"^invenioRecords",templateUrl:e}}function invenioRecordsAlert(){function e(e,n){return n.template}return{restrict:"AE",scope:!1,require:"^invenioRecords",templateUrl:e}}function invenioRecordsForm(e,n,o,r){function i(i,t,a,s){function c(){var n=e.defer();return n.resolve({data:[]}),n.promise}function d(e,n){return void 0!==e.url?o.request(e).then(function(e){var o=p(e.data,n.resultSource);return angular.forEach(o,function(e,r){var i={};i[n.valueProperty]=p(e,n.valueSource||n.valueProperty),i[n.nameProperty]=p(e,n.nameSource||n.nameProperty),o[r]=i}),{data:o}},c):c()}function u(e,n,o){if(void 0!==n){var t={};angular.forEach(n,function(e,n){try{t[n]="value"===e?o:i.$eval(e)||e}catch(r){t[n]=e}}),e=e+"?"+r(angular.merge({},t))}return e}function l(n,o){var r={};if(""===o){if(i.lastSuggestions[n.url]){var t=e.defer();return t.resolve(i.lastSuggestions[n.url]),t.promise}n.scope&&"string"==typeof n.scope.insideModel&&(o=n.scope.insideModel,o=i.$eval(n.processQuery||"query",{query:o}))}return o&&void 0!==n.url&&(r=angular.extend({},r,{url:u(n.url,n.urlParameters,o),method:"GET",data:n.data||{},headers:n.headers||s.invenioRecordsArgs.headers})),d(r,n.map).then(function(e){return i.lastSuggestions[n.url]=e,e})}function v(n,o){var r=""===o||o===n.scope.insideModel;if(r&&n.scope.insideModel){var i=n.scope.insideModel,t=[{name:"("+i.source+") "+i.value,value:i}],a=e.defer();return a.resolve({data:t}),a.promise}return l(n,o)}if(a.formTemplates&&a.formTemplatesBase){var f=JSON.parse(a.formTemplates),m=a.formTemplatesBase;"/"!==m.substr(m.length-1)&&(m+="/"),angular.forEach(f,function(e,o){n.decorator()[o.replace("_","-")].template=m+e})}var p=function(e,n){return n.split(".").reduce(function(e,n){return e[n]},e)};i.lastSuggestions={},i.autocompleteSuggest=l,i.autocompleteTerms=v}function t(e,n){return n.template}return{restrict:"AE",link:i,scope:!1,require:"^invenioRecords",templateUrl:t}}function invenioRecordsLoading(){function e(e,n){return n.template}return{restrict:"AE",scope:!1,require:"^invenioRecords",templateUrl:e}}function InvenioRecordsAPI(e,n){function o(n){return e(n)}function r(e){if(null===e){var r=n.defer();return r.resolve(),r.promise}var i={url:e,method:"GET"};return o(i)}return{get:r,request:o}}angular.module("invenioRecords.config",[]),angular.module("invenioRecords.controllers",[]),angular.module("invenioRecords.directives",[]),angular.module("invenioRecords.services",[]),angular.module("invenioRecords",["schemaForm","invenioRecords.config","invenioRecords.services","invenioRecords.controllers","invenioRecords.directives"]),invenioRecordsConfiguration.$inject=["$locationProvider"],angular.module("invenioRecords.config").config(invenioRecordsConfiguration),InvenioRecordsCtrl.$inject=["$scope","$rootScope","$q","$window","$location","$timeout","InvenioRecordsAPI"],angular.module("invenioRecords.controllers").controller("InvenioRecordsCtrl",InvenioRecordsCtrl),angular.module("invenioRecords.directives").directive("invenioRecords",invenioRecords),angular.module("invenioRecords.directives").directive("invenioRecordsActions",invenioRecordsActions),angular.module("invenioRecords.directives").directive("invenioRecordsAlert",invenioRecordsAlert),invenioRecordsForm.$inject=["$q","schemaFormDecorators","InvenioRecordsAPI","$httpParamSerializerJQLike"],angular.module("invenioRecords.directives").directive("invenioRecordsForm",invenioRecordsForm),angular.module("invenioRecords.directives").directive("invenioRecordsLoading",invenioRecordsLoading),InvenioRecordsAPI.$inject=["$http","$q"],angular.module("invenioRecords.services").service("InvenioRecordsAPI",InvenioRecordsAPI);